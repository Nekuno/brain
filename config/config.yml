valid_ips: ['127.0.0.1', %dev_custom_ip_1%, %dev_custom_ip_2%, %dev_custom_ip_3%, %dev_custom_ip_4%]

secret: %secret%
life_time: 5184000 # 60 days

locale.options:
    default: %locale.default%

instant.host: %instant.host%
guzzle.verify: %guzzle.verify%

dbs.options:
    mysql_social:
        driver: %dbs.mysql_social.driver%
        host: %dbs.mysql_social.host%
        dbname: %dbs.mysql_social.dbname%
        user: %dbs.mysql_social.user%
        password: %dbs.mysql_social.pass%
        charset: utf8
    mysql_brain:
        driver: %dbs.mysql_brain.driver%
        host: %dbs.mysql_brain.host%
        dbname: %dbs.mysql_brain.dbname%
        user: %dbs.mysql_brain.user%
        password: %dbs.mysql_brain.pass%
        charset: utf8

orm.proxies_dir: "%app_root_dir%/../cache/DoctrineProxy"
orm.ems.default: mysql_brain
orm.ems.options:
    mysql_brain:
        connection: mysql_brain
        mappings:
            0:
                type: annotation
                namespace: Model\Entity
                path:  "%app_root_dir%/Model/Entity"
        use_simple_annotation_reader: false

dataFile.dir: "%app_root_dir%/../var"

neo4j.options:
    host: %db.neo4j.host%
    port: %db.neo4j.port%
    auth: %db.neo4j.auth%
    user: %db.neo4j.user%
    pass: %db.neo4j.pass%

swiftmailer.options:
    host: %swiftmailer.host%
    port: %swiftmailer.port%
    username: %swiftmailer.username%
    password: %swiftmailer.password%
    encryption: %swiftmailer.encryption%
    auth_mode: %swiftmailer.auth_mode%
    spool:      { type: memory }
    sender_address: %swiftmailer.sender_address%

amqp.options:
    host: %rabbitmq.host%
    port: %rabbitmq.port%
    user: %rabbitmq.user%
    pass: %rabbitmq.pass%
    vhost: %rabbitmq.vhost%

api_consumer.config:
    resource_owner:
        twitter:
            consumer_key: %twitter.consumer_key%
            consumer_secret: %twitter.consumer_secret%
            client_credential:
                application_token: %twitter.application_token%

        google: &resource_owner.google
            consumer_key: %google.consumer_key%
            consumer_secret: %google.consumer_secret%
            client_credential:
                application_token: %google.application_token%
                service_account_email: %google.service_account_email%
                key_file: %google.key_file%
                key_password: %google.key_password%
                scopes:
                    - 'https://www.googleapis.com/auth/youtube'

        google_profile: *resource_owner.google

        spotify:
            consumer_key: %spotify.consumer_key%
            consumer_secret: %spotify.consumer_secret%

        facebook:
            consumer_key: %facebook.consumer_key%
            consumer_secret: %facebook.consumer_secret%
            redirect_uri: %facebook.redirect_uri%

admin_domain_plus_post: %admin.domain_plus_port%
social_host: %social.host%

fullContact.url: %fullContact.url%
fullContact.consumer_key: %fullContact.consumer_key%
peopleGraph.url: %peopleGraph.url%
peopleGraph.consumer_key: %peopleGraph.consumer_key%

# HWIOAuthBundle
hwi_oauth:
    resource_owners:
        facebook:
            type:               facebook
            client_id:          %facebook.consumer_key%
            client_secret:      %facebook.consumer_secret%
            scope:              "public_profile email user_birthday user_location user_likes user_posts"
            infos_url:          "https://graph.facebook.com/me?fields=id,name,birthday,gender,email,location,picture.type(normal).height(200)"
            #user_response_class: Qnoow\OAuthBundle\OAuth\Response\PathUserResponse
            paths:
                email:          email
                profilepicture: picture.data.url
                birthday:       birthday
                gender:         gender
                location:       location.name
        google:
            type:                google
            client_id:           %google.consumer_key%
            client_secret:       %google.consumer_secret%
            scope:               "email profile openid https://www.googleapis.com/auth/youtube.readonly"
            infos_url:           "https://www.googleapis.com/userinfo/v2/me"
            #user_response_class: Qnoow\OAuthBundle\OAuth\Response\PathUserResponse
            paths:
                email:           email
                profilepicture:  picture
                birthday:        birthday
                gender:          gender
            options:
                access_type:     offline
                approval_prompt: force
        twitter:
            type:                twitter
            client_id:           %twitter.consumer_key%
            client_secret:       %twitter.consumer_secret%
            infos_url:           "https://api.twitter.com/1.1/account/verify_credentials.json?include_email=true"
            paths:
                email:           email
                profilepicture:  profile_image_url
        spotify:
            type:                oauth2
            client_id:           %spotify.consumer_key%
            client_secret:       %spotify.consumer_secret%
            access_token_url:    https://accounts.spotify.com/api/token
            authorization_url:   https://accounts.spotify.com/authorize
            infos_url:           https://api.spotify.com/v1/me
            scope:               "user-read-private user-read-email playlist-read-private"
            #user_response_class: HWI\Bundle\OAuthBundle\OAuth\Response\PathUserResponse
            paths:
                identifier:      id
                nickname:        display_name
                realname:        display_name
                email:           email
                profilepicture:  images.0.url
