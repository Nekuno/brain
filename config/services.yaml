# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    env(locale_default): 'en'
    env(images_web_dir): ''
    env(social_host): ''
    env(admin_domain_plus_port): ''
    env(fields): ''
    env(profile_fields): ''
    env(metadata_config): ''
    env(db_neo4j_host): ''
    env(db_neo4j_port): ''
    env(support_email_1): ''
    env(support_email_2): ''
    env(support_email_3): ''
    env(push_private_key): ''
    env(APP_ENV): ''

services:

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
#    App\:
#        resource: '../src/*'
#        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'
    Model\:
        resource: '../src/Model/*/*{Manager.php,Utilities.php,Calculator.php,Selector.php}'
        exclude: '../src/Model/Metadata/MetadataManager.php'
    Model\Question\Admin\:
        resource: '../src/Model/Question/Admin/*{Manager.php,Builder.php}'
    Model\Question\QuestionCategory\:
        resource: '../src/Model/Question/QuestionCategory/*Manager.php'
    Service\:
        resource: '../src/Service/*'
    Paginator\:
        resource: '../src/Paginator/*'
    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Controller\:
        resource: '../src/Controller/*/*'
        tags: ['controller.service_arguments']

    Symfony\Component\Security\Core\Encoder\:
        resource: '../vendor/symfony/security/Core/Encoder/*'

    Everyman\Neo4j\:
        resource: '../vendor/everyman/neo4jphp/lib/Everyman/Neo4j/*'

    Cocur\Slugify\:
        resource: '../vendor/cocur/slugify/src/*'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    HWI\Bundle\OAuthBundle\Security\Core\Authentication\Provider\OAuthProvider:
        autowire: true
        arguments:
            $userProvider: "@security.users_provider"
            $resourceOwnerMap: "@oauth.resource_owner_map"

    Controller\ArgumentValueResolver:
        tags:
            - { name: controller.argument_value_resolver, priority: 50 }

    Controller\User\UserController:
        arguments:
            $supportEmails:
                - "%env(support_email_1)%"
                - "%env(support_email_2)%"
                - "%env(support_email_3)%"
            $env: "%env(APP_ENV)%"

    Controller\User\QuestionController:
        arguments:
            $defaultLocale: "%env(locale_default)%"

    GuzzleHttp\Client:
        autowire: true

    ApiConsumer\Images\ImageAnalyzer:
        autowire: true

    Model\User\UserManager:
        arguments:
            $imagesBaseDir: "%kernel.project_dir%%env(images_web_dir)%"

    Model\Photo\PhotoManager:
        arguments:
            $base: "%kernel.project_dir%%env(images_web_dir)%"
            $host: "%env(social_host)%"

    Model\Photo\GalleryManager:
        arguments:
            $base: "%kernel.project_dir%%env(images_web_dir)%"

    Model\Invitation\InvitationManager:
        arguments:
            $adminDomain: "%env(admin_domain_plus_port)%"

    Model\Group\GroupManager:
        arguments:
            $invitationImagesRoot: "%env(admin_domain_plus_port)%"

    Model\Device\DeviceManager:
        arguments:
            $applicationServerKey: "%env(push_private_key)%"

    Model\Metadata\MetadataManagerFactory:
        arguments:
            $config: "%metadata_config%"
            $metadata: "%fields%"
            $defaultLocale: "en"

    Model\Metadata\ProfileMetadataManager:
        factory: 'Model\Metadata\MetadataManagerFactory:build'
        arguments: ['profile']
    Model\Metadata\UserFilterMetadataManager:
        factory: 'Model\Metadata\MetadataManagerFactory:build'
        arguments: ['user_filter']

    Service\Validator\ValidatorFactory:
        arguments:
            $config: "%validator_config%"
    Service\Validator\InvitationValidator:
        factory: 'Service\Validator\ValidatorFactory:build'
        arguments: ['invitations']
    Service\Validator\ProfileValidator:
        factory: 'Service\Validator\ValidatorFactory:build'
        arguments: ['profile']
    Service\Validator\FilterUsersValidator:
        arguments:
            $metadata: "%fields%"
    Service\Validator\FilterContentValidator:
        factory: 'Service\Validator\ValidatorFactory:build'
        arguments: ['content_filter']
    Service\Validator\AnswerValidator:
        factory: 'Service\Validator\ValidatorFactory:build'
        arguments: ['answers']
    Service\Validator\QuestionValidator:
        factory: 'Service\Validator\ValidatorFactory:build'
        arguments: ['questions']
    Service\Validator\QuestionAdminValidator:
        factory: 'Service\Validator\ValidatorFactory:build'
        arguments: ['questions_admin']
    Service\Validator\DeviceValidator:
        factory: 'Service\Validator\ValidatorFactory:build'
        arguments: ['device']
    Service\Validator\ThreadValidator:
        factory: 'Service\Validator\ValidatorFactory:build'
        arguments: ['threads']


    Model\Neo4j\GraphManager:
        arguments:
            $username: "%env(db_neo4j_user)%"
            $password: "%env(db_neo4j_pass)%"

    manager.user_manager:
        class: Model\User\UserManager
        arguments:
            $imagesBaseDir: "%kernel.project_dir%%env(images_web_dir)%"

    security.users_provider:
        class: Security\UserProvider
        arguments: ["@manager.user_manager"]

    dispatcher.service:
        class: Service\EventDispatcher
        arguments: ["@event_dispatcher"]

    hwi_oauth.user.provider.entity:
        class: HWI\Bundle\OAuthBundle\Security\Core\User\OAuthUserProvider

